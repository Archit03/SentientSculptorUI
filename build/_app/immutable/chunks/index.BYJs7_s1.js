import{O as i}from"./index.D2mQNFJF.js";const s=async(a="")=>{let o=null;const e=await fetch(`${i}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?o=n.detail:o="Server connection failed",null));if(o)throw o;return e},p=async(a="",o)=>{let e=null;const n=await fetch(`${i}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({enable_openai_api:o})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?e=t.detail:e="Server connection failed",null));if(e)throw e;return n},h=async(a="")=>{let o=null;const e=await fetch(`${i}/urls`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?o=n.detail:o="Server connection failed",null));if(o)throw o;return e.OPENAI_API_BASE_URLS},u=async(a="",o)=>{let e=null;const n=await fetch(`${i}/urls/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({urls:o})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?e=t.detail:e="Server connection failed",null));if(e)throw e;return n.OPENAI_API_BASE_URLS},d=async(a="")=>{let o=null;const e=await fetch(`${i}/keys`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?o=n.detail:o="Server connection failed",null));if(o)throw o;return e.OPENAI_API_KEYS},f=async(a="",o)=>{let e=null;const n=await fetch(`${i}/keys/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({keys:o})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?e=t.detail:e="Server connection failed",null));if(e)throw e;return n.OPENAI_API_KEYS},y=async(a,o)=>{let e=null;const n=await fetch(`${i}/models${typeof o=="number"?`/${o}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var r;return e=`OpenAI: ${((r=t==null?void 0:t.error)==null?void 0:r.message)??"Network Problem"}`,[]});if(e)throw e;return n},w=async(a="",o,e=i)=>{const n=new AbortController;let t=null;const r=await fetch(`${e}/chat/completions`,{signal:n.signal,method:"POST",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify(o)}).catch(c=>(console.log(c),t=c,null));if(t)throw t;return[r,n]};export{h as a,d as b,y as c,s as d,f as e,p as f,w as g,u};
//# sourceMappingURL=index.BYJs7_s1.js.map
