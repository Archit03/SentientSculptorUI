---
- name: Install and Configure Open WebUI
  hosts: all
  become: yes # Use sudo for administrative tasks

  tasks:
    - name: Update all packages to their latest version
      apt:
        name: "*"
        state: latest
        force_apt_get: True

    - name: Upgrade the OS (apt-get dist-upgrade)
      apt:
        upgrade: dist

    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes

    - name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Remove useless packages from the cache
      apt:
        autoclean: yes

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes

    - name: Install common packages
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - ca-certificates
          - curl
          - ffmpeg
          - git
          - htop
          - jq
          - make
          - python3-pip
          - software-properties-common
          - tree
          - vim
          - wget

    # - name: Install AWS Systems Manager Agent
    #   apt:
    #     name: amazon-ssm-agent
    #     state: present
    #     update_cache: yes

    # - name: Enable and start the SSM Agent
    #   systemd:
    #     name: amazon-ssm-agent
    #     enabled: yes
    #     state: started

    # - name: Configure EC2 Detailed Monitoring
    #   aws_ec2_instance:
    #     instance_id: '{{ ansible_ec2_instance_id }}'
    #     monitoring: yes

    - name: Clone Open WebUI repository
      git:
        repo: 'https://github.com/open-webui/open-webui.git'
        dest: '/opt/open-webui'
        force: yes # Forces a clean clone if the repo already exists

    - name: Copy the .env.example to .env
      copy:
        src: '/opt/open-webui/.env.example'
        dest: '/opt/open-webui/.env'
        remote_src: yes # Source file already exists on the target machine

    # - name: Install Node.js and npm
    #   apt_repository:
    #     repo: ppa:nodejs/ppa
    #     state: present

    # - name: Install Node.js and npm
    #   apt:
    #     name:
    #       - nodejs
    #       - npm
    #     state: present
    #     update_cache: yes

    #################################
    # NODE
    ################################
    - name: Download and install NVM
      become: no
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
      environment:
        SHELL: /bin/bash
      args:
        executable: /bin/bash

    - name: Load NVM and install Node.js
      become: no
      shell: |
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install node
        nvm alias default node
        nvm use default
      environment:
        SHELL: /bin/bash

    - name: Ensure Node.js and npm are installed
      command: nvm which node
      become: no

    - name: Ensure npm is installed
      command: npm --version
      become: no

    - name: Install frontend packages
      command: npm install
      args:
        chdir: '/opt/open-webui'

    - name: Build the frontend
      command: npm run build
      args:
        chdir: '/opt/open-webui'

    - name: Create the systemd service for Frontend
      copy:
        dest: /etc/systemd/system/open-webui-frontend.service
        content: |
          [Unit]
          Description=Open WebUI Frontend
          After=network.target

          [Service]
          ExecStart=/usr/bin/npm start
          WorkingDirectory=/opt/open-webui
          Restart=always
          StandardOutput=syslog
          StandardError=syslog
          SyslogIdentifier=open-webui-frontend

          [Install]
          WantedBy=multi-user.target

    - name: Create the systemd service for Backend
      copy:
        dest: /etc/systemd/system/open-webui-backend.service
        content: |
          [Unit]
          Description=Open WebUI Backend
          After=network.target

          [Service]
          ExecStart=/bin/bash -c "cd /opt/open-webui/backend && ./start.sh"
          Restart=always
          StandardOutput=syslog
          StandardError=syslog
          SyslogIdentifier=open-webui-backend

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start the Open WebUI Frontend service
      systemd:
        name: open-webui-frontend
        enabled: yes
        state: started

    - name: Enable and start the Open WebUI Backend service
      systemd:
        name: open-webui-backend
        enabled: yes
        state: started

    - name: Install Conda
      shell: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p /opt/miniconda
        echo 'export PATH="/opt/miniconda/bin:$PATH"' >> ~/.bashrc
        source ~/.bashrc

    - name: Create and activate conda environment
      shell: |
        source /opt/miniconda/bin/activate
        conda create --name open-webui-env python=3.11 -y
        conda activate open-webui-env

    - name: Install Python dependencies
      shell: |
        source /opt/miniconda/bin/activate open-webui-env
        pip install -r /opt/open-webui/backend/requirements.txt

    - name: Start Open WebUI application via Service
      command: bash start.sh
      args:
        chdir: '/opt/open-webui/backend'
